import { createSlice } from '@reduxjs/toolkit';

const initialCounterState = {
  counter: 0,
  showCounter: true,
};

// createSlice is more powerful than createReducer
// can create different slices in different files
// the 4 methods will automatically be called depending which action was triggered
// allowed to mutate state because reduxtool kit internally make a copy of the state and we just change what we want to change here
const counterSlice = createSlice({
  name: 'counter',
  initialState: initialCounterState,
  reducers: {
    increment(state) {
      state.counter++;
    },
    decrement(state) {
      state.counter--;
    },
    increase(state, action) {
      state.counter = state.counter + action.payload;
    },
    toggleCounter(state) {
      state.showCounter = !state.showCounter;
    },
  },
});

// toolkit automatically create action creators out of the methods; look like {type: 'some autogenerated unique identifier'}
// example counterSlice.actions.toggleCounter
// counterSlice.actions will use the same 'action dispatch' name as our reducer methods like increment, increase, etc
export const counterActions = counterSlice.actions;
export default counterSlice.reducer;
